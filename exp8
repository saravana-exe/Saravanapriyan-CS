import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import load_iris
data = load_iris()
X = data.data
y = data.target
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
print("First 5 rows of the standardized dataset:")
print(X_scaled[:5])
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)
print("\nFirst 5 rows of the PCA-transformed dataset (2 components):")
print(f"{'PCA1':<10} {'PCA2':<10}")
for i in range(5):
    print(f"{X_pca[i, 0]:<10.5f} {X_pca[i, 1]:<10.5f}")
explained_variance = pca.explained_variance_ratio_
print("\nExplained Variance Ratio of the 2 principal components:")
print(f"PCA1: {explained_variance[0]:.5f}")
print(f"PCA2: {explained_variance[1]:.5f}")
plt.figure(figsize=(8, 6))
colors = ['r', 'g', 'b']
labels = data.target_names
for cl, color, label in zip(np.unique(y), colors, labels):
    plt.scatter(X_pca[y == cl, 0], X_pca[y == cl, 1], c=color, label=label, alpha=0.7)
plt.title('PCA: 2D Projection of Iris Dataset')
plt.xlabel('PCA1')
plt.ylabel('PCA2')
plt.legend(loc='best')
plt.grid()
plt.show()
